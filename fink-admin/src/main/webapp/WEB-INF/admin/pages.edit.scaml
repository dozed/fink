-import org.noorg.fink.admin.support.Theming._
-import com.codahale.jerkson.Json._

%script(type="text/javascript" src={adminAssets("/assets/ace/ace.js")})
%script(type="text/javascript" src={adminAssets("/assets/ace/mode-markdown.js")})

-@val rootPage : org.noorg.fink.data.entities.Page
-@val page : org.noorg.fink.data.entities.Page

%form(id="pages-form" method="post")
  %p(style="margin-bottom: 1em; font-size: 13px")
    Titel:
    %input(type="text" name="title" size="50" id="title")
    
  %p(style="margin-bottom: 1em; font-size: 13px")
    Shortlink:
    %input(type="text" size="50" name="shortlink" id="shortlink")

  %p(style="margin-bottom: 1em; font-size: 13px")
    Autor:
    %input(type="text" size="50" name="author" id="author")
  
  %p(style="margin-bottom: 1em; font-size: 13px")
    Parent:

    -attributes("rootPage") = rootPage
    -attributes("selected") = page.getParentPage
    -render("pages.select.scaml")
  
  %p(style="margin-bottom: 1em; font-size: 13px")
    Tags:
    %input(type="text" name="tags" id="tagsInput" size="50" value={page.getTags().map(t => t.getName)mkString(",")})
  
  #page-text-editor-outer(style="position: relative; width: 100%; height: 300px")
    #page-text-editor(style="position: absolute; width: 100%; height: 100%")
    %input(type="hidden" name="text" id="text")


.controls
  %a(rel="cancel" class="btn" href={adminBase("/pages")}) Cancel
  %input(type="button" id="save" value="Save")


:!coffeescript
  page = #{generate(page)}

  $ ->
    class PageView extends Backbone.View
      el: "#pages-form"
      
      initialize: ->
        Backbone.ModelBinding.bind(this)

    Page = Backbone.Model.extend({})
    
    p = new Page()
    p.set(page)
    
    view = new PageView({ model: p })
    
    $(this).find("select, input:text, input:checkbox, input:radio, input:file").uniform()

    $("input#tagsInput").tagsInput
      height: "100px"
      width: "300px"

    $("input#save").click ->
      $("form#pages-form").submit();
    
    pageTextInput = $("#text")
    editor = ace.edit("page-text-editor")
    JavaScriptMode = require("ace/mode/markdown").Mode
    editor.getSession().setMode(new JavaScriptMode())
    editor.getSession().setValue("#{Option(page.getText()).getOrElse("").replace("\r", "").replace("\n", "\\n")}")
    editor.getSession().on 'change', ->
      pageTextInput.val(editor.getSession().getValue())
      
    # whut??
    pageTextInput.val(editor.getSession().getValue())
    

    