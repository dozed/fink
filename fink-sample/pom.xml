<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.noorg.fink</groupId>
		<artifactId>fink-project</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>fink-sample</artifactId>
	<packaging>war</packaging>

	<name>${project.artifactId}</name>
	
	<properties>
		<webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.scalatra</groupId>
			<artifactId>scalatra-fileupload_${scala-version}</artifactId>
			<version>${scalatra-version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatra</groupId>
			<artifactId>scalatra-scalate_${scala-version}</artifactId>
			<version>${scalatra-version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring-version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.5.11</version>
		</dependency>
		<dependency>
			<groupId>org.noorg.fink</groupId>
			<artifactId>fink-data</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.noorg.fink</groupId>
			<artifactId>fink-admin</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.fusesource.scalate</groupId>
			<artifactId>scalate-core</artifactId>
			<version>1.5.2</version>
			<type>pom</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.fusesource.scalamd</groupId>
			<artifactId>scalamd</artifactId>
			<version>1.5</version>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${war-plugin-version}</version>
				<configuration>
					<attachClasses>true</attachClasses>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<!-- <version>${scala-plugin-version}</version> -->
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jvmArgs>
						<jvmArg>-Xmx1024m</jvmArg>
					</jvmArgs>
					<args>
						<!-- arg>-unchecked</arg -->
						<arg>-deprecation</arg>
					</args>
					<!-- <scala-version>${scala-version}</scala-version> -->
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin-version}</version>
				<configuration>
					<forkMode>once</forkMode>
					<!-- these settings are mandatory to avoid SureFire giving a bogus system 
						property to the web container -->
					<useSystemClassLoader>false</useSystemClassLoader>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<includes>
						<include>**/*Test.*</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jrebel</id>
			<activation>
				<property>
					<name>env</name>
					<value>jrebel</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>jrebel-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jetty</id>
			<activation>
				<property>
					<name>env</name>
					<value>jetty</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<version>${jetty-plugin-version}</version>
						<configuration>
							<systemProperties>
								<systemProperty>
									<name>fink.home</name>
									<value>${basedir}/..</value>
								</systemProperty>
							</systemProperties>

							<webAppConfig>
								<contextPath>/</contextPath>
								<baseResource
									implementation="org.eclipse.jetty.util.resource.ResourceCollection">
									<resourcesAsCSV>${basedir}/src/main/webapp,${basedir}/../fink-admin/src/main/webapp</resourcesAsCSV>
								</baseResource>
								<extraClasspath>${basedir}/target/fink-sample-0.0.1-SNAPSHOT/WEB-INF/classes,${basedir}/../fink-admin/target/fink-admin-0.0.1-SNAPSHOT/WEB-INF/classes</extraClasspath>
							</webAppConfig>

							<!-- trying to add admin as a separate webapp, that doesnt work since 
								only 1 neo4j kernel is allowed to access a database -->
							<!-- <contextHandlers> <contextHandler implementation="org.eclipse.jetty.webapp.WebAppContext"> 
								<war>${basedir}/../fink-admin/target/fink-admin-0.0.1-SNAPSHOT</war> <contextPath>/admin</contextPath> 
								</contextHandler> </contextHandlers> -->

							<!-- <jettyConfig>${basedir}/jetty.xml</jettyConfig> <contextPath>/foo</contextPath> 
								<webAppSourceDirectory>${basedir}/foo</webAppSourceDirectory> -->

							<!-- <unpackOverlays>true</unpackOverlays> <webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml> -->

							<scanIntervalSeconds>0</scanIntervalSeconds>
							<reload>automatic</reload>

						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.fusesource.scalate</groupId>
						<artifactId>maven-scalate-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
