-import org.noorg.fink.support.Theming._
-import com.codahale.jerkson.Json._

-@val mediaRepository : org.noorg.fink.data.repositories.MediaRepository
-@val collection : org.noorg.fink.data.entities.MediaCollection

:!javascript
  $(document).ready(function() {
    $("select, input:text, textarea, input:checkbox, input:radio").uniform();

    $("#tags").tagsInput({
      height: "100px",
      width: "300px",
    });

    $('#file_upload').uploadify({
      'swf' : '#{adminAssets("/assets/uploadify-3.0.0-beta/uploadify.swf")}',
      'cancelImage'   : '#{adminAssets("/assets/uploadify-3.0.0-beta/uploadify-cancel.png")}',
      'folder'    : '/uploads',
      'auto'      : true,
      'multi'     : true,
      'method'    : 'POST',
      'debug'     : false,
      'uploader'  : '#{adminBase("/collections/edit/"+collection.getUuid+"/add")}',
      'checkExisting' : false,
      'fileObjName'   : 'file',
      'fileTypeExts'  : '*.jpg;*.jpeg;*.gif;*.png',
      'fileTypeDesc'  : 'Image Files (.JPG, .GIF, .PNG)',
      'onQueueComplete' : function() {
        reload_collection($('#collection-id').val());
      },
    });

    $("#images-list").sortable({
      update: function(event, ui) {
      	var order = $("#images-list").sortable('toArray').join(',');
      	$.post("#{adminBase("/collections/edit/"+collection.getUuid+"/sort")}", {
      		order: order
      	}, function() {
      		console.log("done");
      	});
      }
    });

    var meta = $("#collection-meta");
    var images = $("#collection-images");

    var showImagesTab = function() {
      meta.hide();
      images.show();
    }

    var showMetaTab = function() {
      images.hide();
      meta.show();
    }

    $("#btn-edit-meta").click(function() {
      showMetaTab();
    });
    
    $("#btn-edit-images").click(function() {
      showImagesTab();
    });
    
    var p = $.deparam.fragment();
    if (p.tab == "images") {
      showImagesTab();
    } else if (p.tab == "meta") {
      showMetaTab();
    }
    
    $("#btn-collection-save").click(function() {
      var title = $("#title").val();
      var author = $("#author").val();
      var tags = $("#tags").val();
      var shortlink = $("#shortlink").val();
      $.post("#{adminBase("/collections/edit/"+collection.getUuid+"/update")}", {
        title: title,
        author: author,
        tags: tags,
        shortlink: shortlink
      }, function() {
        reload_collection("#{collection.getUuid}");
      });
    });

    $("#btn-edit-cover").click(function(event) {
      event.preventDefault();
      
      $("<div></div>").load("#{adminBase("/collections/edit/"+collection.getUuid+"/images")}", function() {
        var dialog = $(this).modal(); 
        $(this).find(".media-image").click(function() {
          var mediaid = $(this).attr("rel");
          $.post("#{adminBase("/collections/edit/"+collection.getUuid+"/setcover")}", {mediaid: mediaid}, function() {
            dialog.close();
            reload_collection("#{collection.getUuid}");
          });
        });
      });
    });
    
  });

:!coffeescript
  # ClosableView
  # renders to dialog or other parents
  # owner can subscribe to close event and handle the destruction appropriately
  class ImageView extends Backbone.View
    events:
      'click .cancel-button': 'cancel'
      'click .delete-button': 'delete'
      'click .save-button': 'save'
      
    initialize: ->
      @uuid = @el.find("input#uuid").val()
      #Backbone.ModelBinding.bind(this)
      
    cancel: ->
      @dialog.close()
      return false
      
    delete: ->
      dialog = @dialog
      title = @el.find('#title').val()

      $.post "#{adminBase("/collections/edit/"+collection.getUuid+"/image/")}"+@uuid+"/delete", ->
        dialog.close()
        reload_collection("#{collection.getUuid}")
        
      return false
      
    save: ->
      dialog = @dialog
      title = @el.find('#title').val()
      
      $.post "#{adminBase("/collections/edit/"+collection.getUuid+"/image/")}"+@uuid, { title: title }, ->
        dialog.close()
        reload_collection("#{collection.getUuid}")
        
      return false

    render: ->
      @dialog = $(@el).modal()
  
  #Image = Backbone.Model.extend({})

  $("ul.images-list li.image").click (e) ->
    e.preventDefault()
    $("<div></div>").load "#{adminBase("/collections/edit/"+collection.getUuid+"/image/")}"+$(this).attr("id"), ->
      view = new ImageView({ el: $(this).find("#image-editor") })
      view.render() 
      

%h1
  %a(href={"#uuid="+collection.getUuid+"&tab=meta"} id="btn-edit-cover")
    -if (collection.getCover == null)
      %img(type="text" src={adminAssets("/images/noimage.png")})
    -else
      %img(type="text" src={base("/uploads/thumb/")+collection.getCover().getThumb})
  Collection "#{collection.getTitle}"

#collection-navi
  %a(href={"#uuid="+collection.getUuid+"&tab=meta"} id="btn-edit-meta") meta
  %a(href={"#uuid="+collection.getUuid+"&tab=images"} id="btn-edit-images") images

#collection-meta
  %p
    Title:
    %input(type="text" id="title" value={collection.getTitle})

  %p
    Shortlink:
    %input(type="text" id="shortlink" value={collection.getShortlink})

  %p
    Author:
    %input(type="text" id="author" value={collection.getAuthor})

  %p
    Tags:
    %input(type="text" id="tags" value={collection.getTags().map(t => t.getName)mkString(",")})

    #box-cover-select

  %p
    %a(href="#" id="btn-collection-save") save

#collection-images(style="display:none")
  %input(type="hidden" id="collection-id" value="#{collection.getUuid}")
  
  .upload-box
    %input(id="file_upload" name="file" type="file")
    %br
    
    #status-message
    #custom-queue.uploadifyQueue
  
  -if(collection.getItems.size > 0)
    %ul.images-list#images-list
      -for(media <- mediaRepository.getCollectionItems(collection) )
        -# hack
        -val image : org.noorg.fink.data.entities.Image = media.asInstanceOf[org.noorg.fink.data.entities.Image]
        %li.image(id={image.getUuid})
          %a(class="media-image" href={base("/uploads/medium/"+image.getImage)} rel={base("/uploads/medium/"+image.getImage)} title={image.getTitle})
            %img(src={base("/uploads/thumb/"+image.getThumb)} title={image.getTitle})
          %span
            -if (image.getTitle.length > 18)
              =image.getTitle.substring(0,18)
            -else
              =image.getTitle
  
  -else
    %p
      There are no items yet, please upload some first.  

